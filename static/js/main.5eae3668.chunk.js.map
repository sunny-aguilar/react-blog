{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","Userheader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","UserHeader","console","log","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDom","render","document","querySelector"],"mappings":"+QAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCWEC,EAAa,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,uDAMbC,EAAY,SAACC,GAAD,8CAAQ,WAAOT,GAAP,eAAAC,EAAA,sEACRC,EAAgBC,IAAhB,iBAA8BM,IADtB,OACzBL,EADyB,OAG/BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHlB,2CAAR,uDCjBnBG,E,uKACM,IACAC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAIE,yBAAKG,UAAU,UAAUH,EAAKI,MAH5B,S,GALYC,IAAMC,WAgBhBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAACX,GAAD,OAAUA,EAAKF,KAAOW,EAASG,aAGlDL,CAAyBR,GCdlCc,E,kLAGFZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAACC,GAC3B,OACE,yBAAKd,UAAU,OAAOe,IAAKD,EAAKnB,IAC9B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEX,kBAACC,EAAD,CAAYT,OAAQK,EAAKL,gB,+BASjC,OADAU,QAAQC,IAAItB,KAAKC,MAAMa,OAChB,yBAAKZ,UAAU,2BAA2BF,KAAKuB,kB,GAzBnCnB,IAAMC,WAiCdC,eAJS,SAACC,GACvB,MAAO,CAAEO,MAAOP,EAAMO,SAGgB,CAAED,mBFlCR,yDAAM,WAAOzB,EAAUoC,GAAjB,SAAAnC,EAAA,sEAChCD,EAASD,KADuB,OAGtCsC,IAAEC,MAAMF,IAAWV,OAChBC,IAAI,UACJY,OACAC,SAAQ,SAAC/B,GAAD,OAAQT,EAASQ,EAAUC,OACnCgC,QAPmC,2CAAN,0DEkCnBvB,CAAiDM,GC3BjDkB,EARH,WACV,OACE,yBAAK5B,UAAU,gBACb,kBAAC,EAAD,Q,QCFS6B,cAAgB,CAC7BjB,MCLa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIyB,EAAW,uCACrC,OAAQA,EAAOvC,MACb,IAAK,cACH,OAAOuC,EAAOtC,QAChB,QACE,OAAOa,IDCXE,MENa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIyB,EAAW,uCACrC,OAAQA,EAAOvC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWc,GAAX,CAAkByB,EAAOtC,UAC3B,QACE,OAAOa,MCIP0B,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.5eae3668.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com\",\n});\n","import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\n\n// action creators\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map(\"userId\")\n    .uniq()\n    .forEach((id) => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async (dispatch) => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = (id) => async (dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n\n// export const fetchUser = (id) => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//   dispatch({ type: \"FETCH_USER\", payload: response.data });\n// });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Userheader extends React.Component {\n  render() {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    return <div className=\"header\">{user.name}</div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { user: state.users.find((user) => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps)(Userheader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPostsAndUsers } from \"../actions\";\nimport UserHeader from \"./UserHeader\";\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    // this.props.fetchPosts();\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map((post) => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    console.log(this.props.posts);\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\n","import React from \"react\";\nimport PostList from \"./PostList\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\nimport usersReducer from \"./usersReducer\";\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n});\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}